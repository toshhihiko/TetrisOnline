using UnityEngine;

public class GameMino 
{
    public int size = 4;
    public int[,,] types;
    public int x, y;
    public int angle;
    public int type;
    private int[,,] mino_T =
    {
        { { 0, 0, 0, 0 }, { 0, 0, 0, 0 }, { 1, 1, 1, 0 }, { 0, 1, 0, 0 }, }, // 0度
        { { 0, 0, 0, 0 }, { 0, 1, 0, 0 }, { 1, 1, 0, 0 }, { 0, 1, 0, 0 }, }, // 90度
        { { 0, 0, 0, 0 }, { 0, 1, 0, 0 }, { 1, 1, 1, 0 }, { 0, 0, 0, 0 }, }, // 180度
        { { 0, 0, 0, 0 }, { 0, 1, 0, 0 }, { 0, 1, 1, 0 }, { 0, 1, 0, 0 }, }, // 270度
    };
    private int[,,] mino_I =
    {
        { { 0, 0, 0, 0 }, { 2, 2, 2, 2 }, { 0, 0, 0, 0 }, { 0, 0, 0, 0 }, }, // 0度
        { { 0, 0, 2, 0 }, { 0, 0, 2, 0 }, { 0, 0, 2, 0 }, { 0, 0, 2, 0 }, }, // 90度
        { { 0, 0, 0, 0 }, { 0, 0, 0, 0 }, { 2, 2, 2, 2 }, { 0, 0, 0, 0 }, }, // 180度
        { { 0, 2, 0, 0 }, { 0, 2, 0, 0 }, { 0, 2, 0, 0 }, { 0, 2, 0, 0 }, }, // 270度
    };
    private int[,,] mino_O =
    {
        { { 0, 0, 0, 0 }, { 0, 3, 3, 0 }, { 0, 3, 3, 0 }, { 0, 0, 0, 0 }, }, // 0度
        { { 0, 0, 0, 0 }, { 0, 3, 3, 0 }, { 0, 3, 3, 0 }, { 0, 0, 0, 0 }, }, // 90度
        { { 0, 0, 0, 0 }, { 0, 3, 3, 0 }, { 0, 3, 3, 0 }, { 0, 0, 0, 0 }, }, // 180度
        { { 0, 0, 0, 0 }, { 0, 3, 3, 0 }, { 0, 3, 3, 0 }, { 0, 0, 0, 0 }, }, // 270度
    };
    private int[,,] mino_S =
    {
        { { 0, 0, 0, 0 }, { 0, 0, 0, 0 }, { 0, 4, 4, 0 }, { 4, 4, 0, 0 }, }, // 0度
        { { 0, 0, 0, 0 }, { 4, 0, 0, 0 }, { 4, 4, 0, 0 }, { 0, 4, 0, 0 }, }, // 90度
        { { 0, 0, 0, 0 }, { 0, 4, 4, 0 }, { 4, 4, 0, 0 }, { 0, 0, 0, 0 }, }, // 180度
        { { 0, 0, 0, 0 }, { 0, 4, 0, 0 }, { 0, 4, 4, 0 }, { 0, 0, 4, 0 }, }, // 270度
    };
    private int[,,] mino_Z =
    {
        { { 0, 0, 0, 0 }, { 0, 0, 0, 0 }, { 5, 5, 0, 0 }, { 0, 5, 5, 0 }, }, // 0度
        { { 0, 0, 0, 0 }, { 0, 5, 0, 0 }, { 5, 5, 0, 0 }, { 5, 0, 0, 0 }, }, // 90度
        { { 0, 0, 0, 0 }, { 5, 5, 0, 0 }, { 0, 5, 5, 0 }, { 0, 0, 0, 0 }, }, // 180度
        { { 0, 0, 0, 0 }, { 0, 0, 5, 0 }, { 0, 5, 5, 0 }, { 0, 5, 0, 0 }, }, // 270度
    };
    private int[,,] mino_J =
    {
        { { 0, 0, 0, 0 }, { 0, 0, 0, 0 }, { 6, 6, 6, 0 }, { 0, 0, 6, 0 }, }, // 0度
        { { 0, 0, 0, 0 }, { 0, 6, 0, 0 }, { 0, 6, 0, 0 }, { 6, 6, 0, 0 }, }, // 90度
        { { 0, 0, 0, 0 }, { 6, 0, 0, 0 }, { 6, 6, 6, 0 }, { 0, 0, 0, 0 }, }, // 180度
        { { 0, 0, 0, 0 }, { 0, 6, 6, 0 }, { 0, 6, 0, 0 }, { 0, 6, 0, 0 }, }, // 270度
    };
    private int[,,] mino_L =
    {
        { { 0, 0, 0, 0 }, { 0, 0, 0, 0 }, { 7, 7, 7, 0 }, { 7, 0, 0, 0 }, }, // 0度
        { { 0, 0, 0, 0 }, { 7, 7, 0, 0 }, { 0, 7, 0, 0 }, { 0, 7, 0, 0 }, }, // 90度
        { { 0, 0, 0, 0 }, { 0, 0, 7, 0 }, { 7, 7, 7, 0 }, { 0, 0, 0, 0 }, }, // 180度
        { { 0, 0, 0, 0 }, { 0, 7, 0, 0 }, { 0, 7, 0, 0 }, { 0, 7, 7, 0 }, }, // 270度
    };
    public GameMino() {
        y = 0;
        x = 6;
        type = Random.Range(1, 8);
        angle = Random.Range(0, 4);
        RandomSet(2);
    }
    private void RandomSet(int type) {
        switch (type) {
            case 1: types = mino_T; break;
            case 2: types = mino_I; break;
            case 3: types = mino_O; break;
            case 4: types = mino_S; break;
            case 5: types = mino_Z; break;
            case 6: types = mino_J; break;
            case 7: types = mino_L; break;
        }
    }
}
